// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PublisherIO.Data;

#nullable disable

namespace PublisherIO.Data.Migrations
{
    [DbContext(typeof(PublisherDbContext))]
    [Migration("20240405224423_CrearTablaLevels")]
    partial class CrearTablaLevels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PublisherIO.Entidades.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AuthorId");

                    b.HasIndex("FirstName", "LastName")
                        .IsUnique();

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            FirstName = "Isaac",
                            LastName = "Asimov"
                        },
                        new
                        {
                            AuthorId = 4,
                            FirstName = "Arthur",
                            LastName = "Clarke"
                        },
                        new
                        {
                            AuthorId = 5,
                            FirstName = "Ursula",
                            LastName = "LeGuin"
                        },
                        new
                        {
                            AuthorId = 6,
                            FirstName = "John",
                            LastName = "Tolkien"
                        });
                });

            modelBuilder.Entity("PublisherIO.Entidades.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("PublishDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1,
                            Price = 15m,
                            PublishDate = new DateOnly(1972, 5, 27),
                            Title = "I, Robot"
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 5,
                            Price = 10m,
                            PublishDate = new DateOnly(1960, 10, 1),
                            Title = "The Tombs Of Atuan"
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 5,
                            Price = 10m,
                            PublishDate = new DateOnly(1980, 12, 25),
                            Title = "A Whizard Of Earthsea"
                        });
                });

            modelBuilder.Entity("PublisherIO.Entidades.Book", b =>
                {
                    b.HasOne("PublisherIO.Entidades.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("PublisherIO.Entidades.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
